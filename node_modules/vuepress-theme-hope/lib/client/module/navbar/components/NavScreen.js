import { useScrollLock } from "@vueuse/core";
import { Transition, defineComponent, h, ref, onBeforeUnmount, onMounted, watch, } from "vue";
import { useRoute } from "vue-router";
import { useMobile } from "@theme-hope/composables";
import NavScreenLinks from "@theme-hope/module/navbar/components/NavScreenLinks";
import OutlookSettings from "@theme-hope/module/outlook/components/OutlookSettings";
import "../styles/nav-screen.scss";
export default defineComponent({
    name: "NavScreen",
    props: {
        active: {
            type: Boolean,
            default: false,
        },
    },
    emits: ["close"],
    setup(props, { emit, slots }) {
        const route = useRoute();
        const isMobile = useMobile();
        const body = ref();
        const isLocked = useScrollLock(body);
        watch(isMobile, (value) => {
            if (!value && props.active)
                emit("close");
        });
        watch(() => route.path, () => {
            isLocked.value = false;
            emit("close");
        });
        onMounted(() => {
            body.value = document.body;
        });
        onBeforeUnmount(() => {
            isLocked.value = false;
        });
        return () => h(Transition, {
            name: "fade",
            onEnter: () => {
                isLocked.value = true;
            },
            onAfterLeave: () => {
                isLocked.value = false;
            },
        }, () => {
            var _a, _b;
            return props.active
                ? h("div", { id: "nav-screen" }, h("div", { class: "container" }, [
                    (_a = slots.before) === null || _a === void 0 ? void 0 : _a.call(slots),
                    h(NavScreenLinks),
                    h("div", { class: "outlook-wrapper" }, h(OutlookSettings)),
                    (_b = slots.after) === null || _b === void 0 ? void 0 : _b.call(slots),
                ]))
                : null;
        });
    },
});
//# sourceMappingURL=NavScreen.js.map