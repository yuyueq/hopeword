import { getAuthor, getCategory, getDate, getTag, } from "@mr-hope/vuepress-shared/lib/client";
import { usePageLang } from "@vuepress/client";
import { computed, reactive } from "vue";
import { useCategoryMap } from "./categoryMap";
import { useBlogOptions } from "./options";
import { useTagMap } from "./tagMap";
import { usePure, useThemeLocaleData } from "@theme-hope/composables";
export const useArticleAuthor = (info) => {
    const themeLocale = useThemeLocaleData();
    return computed(() => {
        const { author } = info.value;
        if (author)
            return getAuthor(author);
        if (author === false)
            return [];
        return getAuthor(themeLocale.value.author, false);
    });
};
export const useArticleCategory = (info) => {
    const categoryMap = useCategoryMap();
    return computed(() => getCategory(info.value.category).map((name) => ({
        name,
        path: categoryMap.value.map[name].path,
    })));
};
export const useArticleTag = (info) => {
    const tagMap = useTagMap();
    return computed(() => getTag(info.value.tag).map((name) => ({
        name,
        path: tagMap.value.map[name].path,
    })));
};
export const useArticleDate = (info) => {
    const pageLang = usePageLang();
    return computed(() => {
        const { date } = info.value;
        return date ? getDate(date, { lang: pageLang.value, type: "date" }) : null;
    });
};
export const useArticleInfo = (info) => {
    const blogOptions = useBlogOptions();
    const author = useArticleAuthor(info);
    const category = useArticleCategory(info);
    const tag = useArticleTag(info);
    const date = useArticleDate(info);
    const pure = usePure();
    return reactive({
        config: blogOptions.value.articleInfo || [
            "Author",
            "Original",
            "Date",
            "PageView",
            "Category",
            "Tag",
            "ReadingTime",
        ],
        author: author.value,
        category: category.value,
        date: date.value,
        tag: tag.value,
        isOriginal: info.value.isOriginal,
        readingTime: info.value.readingTime,
        color: !pure.value,
        hint: !pure.value,
    });
};
//# sourceMappingURL=articleInfo.js.map