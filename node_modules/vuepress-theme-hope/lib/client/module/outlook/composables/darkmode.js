import { usePreferredDark, useStorage } from "@vueuse/core";
import { computed, inject, onMounted, onUnmounted, provide, watch } from "vue";
import { useThemeData } from "@theme-hope/composables";
export const darkModeSymbol = Symbol.for("darkMode");
/**
 * Inject dark mode global computed
 */
export const useDarkMode = () => {
    const darkmode = inject(darkModeSymbol);
    if (!darkmode) {
        throw new Error("useDarkMode() is called without provider.");
    }
    return darkmode;
};
export const updateDarkModeAttr = (isDarkMode) => {
    const update = (isDark = isDarkMode.value) => {
        const html = window === null || window === void 0 ? void 0 : window.document.querySelector("html");
        html === null || html === void 0 ? void 0 : html.setAttribute("data-theme", isDark ? "dark" : "light");
    };
    onMounted(() => {
        watch(isDarkMode, update, { immediate: true });
    });
    onUnmounted(() => update());
};
export const setupDarkMode = () => {
    const themeData = useThemeData();
    const isDarkPreferred = usePreferredDark();
    const darkmodeStorage = useStorage("vuepress-theme-hope-scheme", "auto");
    const isDarkMode = computed(() => {
        const { darkmode } = themeData.value;
        // disable dark mode
        return darkmode === "disable"
            ? false
            : // force dark
                darkmode === "force-dark"
                    ? true
                    : // auto
                        darkmode === "auto"
                            ? isDarkPreferred.value
                            : // switch
                                darkmode === "switch"
                                    ? darkmodeStorage.value === "dark"
                                    : // auto-switch
                                        darkmodeStorage.value === "dark" ||
                                            (darkmodeStorage.value === "auto" && isDarkPreferred.value);
    });
    provide(darkModeSymbol, { isDarkMode, status: darkmodeStorage });
    updateDarkModeAttr(isDarkMode);
};
//# sourceMappingURL=darkmode.js.map