"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getPluginConfig = void 0;
const vuepress_plugin_sitemap2_1 = require("vuepress-plugin-sitemap2");
const activeHeaderLinks_1 = require("./activeHeaderLinks");
const blog_1 = require("./blog");
const comment_1 = require("./comment");
const components_1 = require("./components");
const copyCode_1 = require("./copyCode");
const feed_1 = require("./feed");
const mdEnhance_1 = require("./mdEnhance");
const photoSwipe_1 = require("./photoSwipe");
const pwa_1 = require("./pwa");
const search_1 = require("./search");
const sitemap_1 = require("./sitemap");
const seo_1 = require("./seo");
const getPluginConfig = (app, plugins, themeData, hostname) => {
    const pluginConfig = [
        (0, components_1.resolveComponentsPlugin)(plugins, themeData),
        (0, activeHeaderLinks_1.resolveActiveHeaderLinksPlugin)(plugins.activeHeaderLinks),
        ["@vuepress/external-link-icon", plugins.externalLinkIcon !== false],
        ["@vuepress/nprogress", plugins.nprogress !== false],
        ["@vuepress/prismjs", plugins.prismjs !== false],
        ["@vuepress/theme-data", { themeData }],
        (0, blog_1.resolveBlogPlugin)(themeData, plugins.blog),
        (0, comment_1.resolveCommentPlugin)(plugins.comment),
        (0, copyCode_1.resolveCopyCodePlugin)(themeData, plugins.copyCode),
        // seo should work before feed
        (0, seo_1.resolveSEOPlugin)(hostname, themeData, plugins),
        (0, feed_1.resolveFeedPlugin)(hostname, themeData, plugins.feed),
        (0, mdEnhance_1.resolveMdEnhancePlugin)(plugins.mdEnhance),
        (0, photoSwipe_1.resolvePhotoSwipePlugin)(plugins.photoSwipe),
        (0, pwa_1.resolvePWAPlugin)(plugins.pwa),
        (0, vuepress_plugin_sitemap2_1.sitemap)((0, sitemap_1.resolveSitemapOptions)(hostname, plugins.sitemap)),
        // try resolving search plugin
        (0, search_1.resolveSearchPlugin)(plugins),
    ].filter((item) => item[1] !== false);
    if (app.env.isDebug)
        console.log("Theme plugin options:", pluginConfig);
    return pluginConfig;
};
exports.getPluginConfig = getPluginConfig;
//# sourceMappingURL=getConfig.js.map