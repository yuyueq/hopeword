import { LocaleConfig, Plugin, PluginConfig } from '@vuepress/core';
import { AuthorInfo, DateInfo, ConvertLocaleConfig } from '@mr-hope/vuepress-shared';

/**
 * Type of article infomation
 *
 * 文章信息类型
 */
declare type ArticleInfo = "Author" | "Category" | "Date" | "Original" | "PageView" | "Tag" | "ReadingTime" | "Word";
interface ArticleCategory {
    /**
     * Category name
     *
     * 分类名称
     */
    name: string;
    /**
     * Category path
     *
     * 分类路径
     */
    path?: string;
}
declare type ArticleTag = ArticleCategory;
interface ReadingTime {
    /**
     * expect reading time
     *
     * 期望的阅读时间
     */
    minutes: number;
    /**
     * words of current page
     *
     * 当前页的字数
     */
    words: number;
}
interface ArticleInfoProps {
    /**
     * Article Info display configuration
     *
     * @see https://vuepress-theme-hope.github.io/v2/components/guide/articleInfo/
     *
     * 文章信息配置
     *
     * @see https://vuepress-theme-hope.gitee.io/v2/components/zh/guide/articleInfo/
     *
     * @default ["Author", "Original", "Date", "Category", "Tag", "ReadingTime"]
     */
    config?: ArticleInfo[] | false;
    /**
     * Whether enable hint popup for articleInfo
     *
     * 是否启用文章信息的弹窗提示
     *
     * @default true
     */
    hint?: boolean;
    /**
     * Whether use colorful categories and tags
     *
     * 是否启用多彩的分类与标签
     *
     * @default true
     */
    color?: boolean;
    /**
     * Authors of article
     *
     * 文章作者
     */
    author?: AuthorInfo[];
    /**
     * Categories of article
     *
     * 文章分类
     */
    category?: ArticleCategory[];
    /**
     * Tags of article
     *
     * 文章标签
     */
    tag?: ArticleTag[];
    /**
     * Writing Date
     *
     * 写作日期
     */
    date?: DateInfo | null;
    /**
     * Whether the aricle is orginal
     *
     * 文章是否原创
     */
    isOriginal?: boolean | null;
    /**
     * Whether enable pageview
     *
     * If the value is a string, it will use as search id
     *
     * 是否启用访问量
     *
     * 如果值为字符串，会用做查询 id
     */
    pageview?: string | boolean;
    /**
     * ReadingTime info
     *
     * 阅读时间
     */
    readingTime?: ReadingTime;
}

interface ArticleInfoLocaleData {
    /**
     * Author label text
     *
     * 作者文字
     */
    author: string;
    /**
     * Writing date label text
     *
     * 写作日期文字
     */
    date: string;
    /**
     * Label text marked as original
     *
     * 标记原创的文字
     */
    origin: string;
    /**
     * Page views label text
     *
     * 访问量文字
     */
    views: string;
    /**
     * Tag label text
     *
     * 标签文字
     */
    tag: string;
    /**
     * Category label text
     *
     * 分类文字
     */
    category: string;
    /**
     * Expect reading time label text
     *
     * 期望阅读时间文字
     */
    readingTime: string;
    /**
     * Words label Text
     *
     * 文章字数
     */
    words: string;
}
declare type ArticleInfoLocaleConfig = ConvertLocaleConfig<ArticleInfoLocaleData>;
interface BackToTopLocaleData {
    /**
     * Back to top button label text
     *
     * 返回顶部文字
     */
    backToTop: string;
}
declare type BackToTopLocaleConfig = ConvertLocaleConfig<BackToTopLocaleData>;
interface PaginationLocaleData {
    /**
     * Previous page button label text
     *
     * 上一页文字
     */
    prev: string;
    /**
     * Next page button label text
     *
     * 下一页文字
     */
    next: string;
    /**
     * Navigation hint label text
     *
     * 跳转提示文字
     */
    navigate: string;
    /**
     * Navigation button label text
     *
     * 跳转按钮文字
     */
    button: string;
    /**
     * Error text when invalid page number, `$page` will be replaced by total page number automatically
     *
     * 页码错误文字，其中 `$page` 会自动替换为当前的总页数
     */
    errorText: string;
}
declare type PaginationLocaleConfig = ConvertLocaleConfig<PaginationLocaleData>;
interface TOCLocaleData {
    /**
     * TOC header
     *
     * TOC 标题
     */
    header: string;
}
declare type TOCLocaleConfig = ConvertLocaleConfig<TOCLocaleData>;

interface ComponentOptions {
    /**
     * Whether register article info component
     *
     * 是否注册文章信息
     *
     * @default false
     */
    articleInfo?: boolean;
    /**
     * Whether enabling backToTop button
     *
     * 是否启用返回顶部按钮
     *
     * @default false
     */
    backToTop?: boolean;
    /**
     * backToTop button threshold distance (in pixels)
     *
     * 返回顶部按钮触发距离 (单位：像素)
     *
     * @default 300
     */
    backToTopThreshold?: number;
    /**
     * Whether register breadcrumb component
     *
     * 是否注册路径导航
     *
     * @default false
     */
    breadcrumb?: boolean;
    /**
     * Whether register badge component
     *
     * 是否注册徽章组件
     *
     * @default false
     */
    badge?: boolean;
    /**
     * Whether register scrennfull button component
     *
     * 是否注册全屏按钮
     *
     * @default false
     */
    fullscreen?: boolean;
    /**
     * Whether register pagination component
     *
     * 是否注册分页组件
     *
     * @default false
     */
    pagination?: boolean;
    /**
     * Whether register toc component
     *
     * 是否注册 TOC 组件
     *
     * @default false
     */
    toc?: boolean;
    /**
     * Locales config for articleInfo
     *
     * 文章信息的国际化配置
     */
    articleInfoLocales?: LocaleConfig<ArticleInfoLocaleData>;
    /**
     * backToTop button Locales config
     *
     * 返回顶部按钮国际化配置
     */
    backToTopLocales?: LocaleConfig<BackToTopLocaleData>;
    /**
     * Locales config for TOC
     *
     * 标题列表的国际化配置
     */
    tocLocales?: LocaleConfig<TOCLocaleData>;
    /**
     * Locales config for pagination
     *
     * 分页的国际化配置
     */
    paginationLocales?: LocaleConfig<PaginationLocaleData>;
}

interface PageTitleProps extends ArticleInfoProps {
    /**
     * Whether display icon besides title
     *
     * 是否在标题旁显示图标
     *
     * @default false
     */
    titleIcon?: boolean;
    /**
     * Title icon prefix
     *
     * 标题图标 class 前缀
     */
    titleIconPrefix?: string;
}

declare const componentsPlugin: Plugin<ComponentOptions>;
declare const components: (options: ComponentOptions | false) => PluginConfig<ComponentOptions>;

export { ArticleCategory, ArticleInfo, ArticleInfoLocaleConfig, ArticleInfoLocaleData, ArticleInfoProps, ArticleTag, BackToTopLocaleConfig, BackToTopLocaleData, ComponentOptions, PageTitleProps, PaginationLocaleConfig, PaginationLocaleData, ReadingTime, TOCLocaleConfig, TOCLocaleData, components, componentsPlugin, componentsPlugin as default };
