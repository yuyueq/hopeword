import * as vue from 'vue';
import { PropType, VNode } from 'vue';
import { AuthorInfo, DateInfo } from '@mr-hope/vuepress-shared';
import { ReadingTime } from 'vuepress-plugin-reading-time2';

/**
 * Type of article infomation
 *
 * 文章信息类型
 */
declare type ArticleInfo = "Author" | "Category" | "Date" | "Original" | "PageView" | "Tag" | "ReadingTime" | "Word";

declare const _default: vue.DefineComponent<{
    config: {
        type: PropType<false | ArticleInfo[]>;
        default: () => ArticleInfo[];
    };
    hint: {
        type: BooleanConstructor;
        default: boolean;
    };
    author: {
        type: PropType<AuthorInfo[]>;
        default: () => never[];
    };
    category: {
        type: PropType<string[]>;
        default: () => never[];
    };
    tag: {
        type: PropType<string[]>;
        default: () => never[];
    };
    date: {
        type: PropType<DateInfo | null>;
        default: null;
    };
    isOriginal: {
        type: BooleanConstructor;
        default: boolean;
    };
    pageview: {
        type: (BooleanConstructor | StringConstructor)[];
        default: boolean;
    };
    readingTime: {
        type: PropType<ReadingTime | null>;
        default: () => null;
    };
    color: {
        type: BooleanConstructor;
        default: boolean;
    };
}, () => VNode | null, unknown, {}, {}, vue.ComponentOptionsMixin, vue.ComponentOptionsMixin, Record<string, any>, string, vue.VNodeProps & vue.AllowedComponentProps & vue.ComponentCustomProps, Readonly<vue.ExtractPropTypes<{
    config: {
        type: PropType<false | ArticleInfo[]>;
        default: () => ArticleInfo[];
    };
    hint: {
        type: BooleanConstructor;
        default: boolean;
    };
    author: {
        type: PropType<AuthorInfo[]>;
        default: () => never[];
    };
    category: {
        type: PropType<string[]>;
        default: () => never[];
    };
    tag: {
        type: PropType<string[]>;
        default: () => never[];
    };
    date: {
        type: PropType<DateInfo | null>;
        default: null;
    };
    isOriginal: {
        type: BooleanConstructor;
        default: boolean;
    };
    pageview: {
        type: (BooleanConstructor | StringConstructor)[];
        default: boolean;
    };
    readingTime: {
        type: PropType<ReadingTime | null>;
        default: () => null;
    };
    color: {
        type: BooleanConstructor;
        default: boolean;
    };
}>>, {
    author: AuthorInfo[];
    hint: boolean;
    category: string[];
    color: boolean;
    date: DateInfo | null;
    isOriginal: boolean;
    pageview: string | boolean;
    readingTime: ReadingTime | null;
    tag: string[];
    config: false | ArticleInfo[];
}>;

export { _default as default };
